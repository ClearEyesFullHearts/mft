openapi: "3.0.0"
info:
  version: 1.0.0
  title: MFT Config Handler
  license:
    name: MIT
servers:
  - url: http://localhost:3001
paths:
  /config/{env}:
    get:
      summary: Get the raw config for an environment
      operationId: getConfig
      x-eov-operation-handler: api
      parameters:
        - name: env
          in: path
          required: true
          description: The current environment
          schema:
            type: string
        - name: version
          in: query
          description: The specific version of the config
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A config object
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Config"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /load:
    put:
      summary: Force the reloading of all config files
      operationId: reload
      x-eov-operation-handler: api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Load'
      responses:
        '200':
          description: Reloading worked
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Load:
      type: object
      required:
        - apps
      properties:
        apps:
          type: array
          items:
            type: string
            enum:
              - "*"
              - "mail-worker"
              - "log-manager"
    Config:
      type: object
      required:
        - secret
      properties:
        secret:
          type: object
        public:
          type: object
        base:
          type: object
        api:
          type: array
          items:
            type: object
        async:
          type: object
        destination:
          type: object
        mail:
          type: object
        templates:
          type: object
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
