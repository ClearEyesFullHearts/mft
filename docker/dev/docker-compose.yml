version: "3"

services:

  client:
    build: 
      context: ../../front
      args:
        - DOCKER_ENV=dock-dev
    ports:
      - ${FRONT_PUBLIC_PORT}:80
    depends_on: 
      - server

  server:
    build:
      context: ../../
      dockerfile: docker/files/restapi.dockerfile
    container_name: server
    ports:
      - ${SERVER_PUBLIC_PORT}:3000
    depends_on: 
      - config
    command: sh -c '/bin/wait-for-it.sh config:3001 --timeout=30 -- node app.js'
    environment:
      - DEBUG=mft-back:*,async:*
      - NODE_ENV=dock-dev

  log-manager:
    build:
      context: ../../
      dockerfile: docker/files/logmanager.dockerfile
    container_name: log-manager
    depends_on: 
      - config
    command: sh -c '/bin/wait-for-it.sh config:3001 --timeout=30 -- node app.js'
    environment:
      - DEBUG=log-manager:*,async:*
      - NODE_ENV=dock-dev

  mail-worker:
    build:
      context: ../../
      dockerfile: docker/files/mailworker.dockerfile
    container_name: mail-worker
    depends_on: 
      - config
    command: sh -c '/bin/wait-for-it.sh config:3001 --timeout=30 -- node app.js'
    environment:
      - DEBUG=mail-worker:*,async:*
      - NODE_ENV=dock-dev

  config:
    build:
      context: ../../
      dockerfile: docker/files/config.dockerfile
    container_name: config
    depends_on: 
      - server-database
      - server-fake-smtp
      - broker
      - my-rabbit-mq
    command: sh -c '/bin/wait-for-it.sh my-rabbit-mq:5672 --timeout=30 -- node app.js'
    environment:
      - DEBUG=config-handler:*
      - NODE_ENV=dock-dev
    
  server-database:
    image: mongo:4.2.24-rc2-bionic
    ports:
      - 27017:27017
    
  server-fake-smtp:
    image: reachfive/fake-smtp-server
    ports:
      - 1025:1025
      - 1080:1080

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    
  my-rabbit-mq:
    image: rabbitmq:3.8-management-alpine
    container_name: my-rabbit-mq
    environment:
        - RABBITMQ_DEFAULT_USER=myuser
        - RABBITMQ_DEFAULT_PASS=mypassword
    ports:
        # AMQP protocol port
        - '5672:5672'
        # HTTP management UI
        - '15672:15672'
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    container_name: es01
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
